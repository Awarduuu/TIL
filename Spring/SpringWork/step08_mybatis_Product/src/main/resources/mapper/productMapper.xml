<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ns.sql.productMapper">

	<sql id="selectSql">
		select code, name, qty, price, detail 
		from productList
	</sql>
	<!--1.등록 -->
	<insert id="insert" parameterType="productDTO"> <!-- 별칭을 정해서 쓰는것임 -->
		insert into productList(code, name, qty, price, detail)
		values(#{code}, #{name}, #{qty}, #{price}, #{detail})
	</insert>
	
	<!-- 2. 전체검색 -->
	<select id="selectAll" resultType="productDTO">
		<include refid="selectSql"/>
	</select>
	
	<!-- 3. 검색필드 , 검색단어에 해당하는 레코드 검색 -->
	<select id="selectByKeyWord" resultType="productDTO" parameterType="map">
		<include refid="selectSql"/>
		where ${field} like '%'|| #{keyword} ||'%'
	</select>
	
	<!-- 4. 전달된 컬럼을 기반으로 정렬하기  -->
	<select id="selectByOrder" parameterType="string" resultType="productDTO">
		<include refid="selectSql"/>
		order by ${_parameter}
	
	</select>
	
	<!-- 5. parameter 정보에 따라 레코드 수정한다. -->
	<update id="update" parameterType="productDTO">
		update productList
		set name=#{name}, qty=#{qty}, price=#{price}, detail=#{detail}
		where code = #{code}
	</update>
	
	<!-- 6.상품코드에 해당하는 레코드 삭제 -->
	<delete id="delete" parameterType="string">
		delete from productList where code = #{_parameter}
	</delete>
	
	 <!-- 7.모든 상품의 개수를 출력한다. -->
	 <select id="selectSumQty" resultType="int">
	 	select sum(qty) from productList
	 </select>
	
</mapper>