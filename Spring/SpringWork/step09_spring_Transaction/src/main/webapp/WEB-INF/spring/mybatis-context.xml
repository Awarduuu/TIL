<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<context:component-scan base-package="web.mvc.service,web.mvc.dao" />
<context:property-placeholder location="/WEB-INF/spring/appServlet/*.properties"/>

<!-- oracle 연결!!!!! -->
<beans:bean	id="dataSource" 
                class="org.apache.commons.dbcp.BasicDataSource"
				p:driverClassName="${jdbc.oracle.driver}"
				p:url="${jdbc.oracle.url}"
				p:username="${jdbc.oracle.username}"
				 p:password="${jdbc.oracle.password}"  
				 p:maxActive="10"/> 	
				 

<!-- SqlSessionFactoryBean 생성되면 SqlSessionFactory가 만들어진다. -->
   <beans:bean id="sqlSessionFactory" 
   class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations" value="classpath:mapper/*Mapper.xml" /><!--  Mapper.xml 로끝나는 mppter모두 등록 -->
		<beans:property name="typeAliasesPackage" value="web.mvc.dto" /><!-- dto폴더안에있는 클래스들 별칭 자동만듦 - 클래스명의 첫글만 소문자!! -->
	   <beans:property name="configLocation" value="classpath:SqlMapConfig.xml"/>
	</beans:bean>
	
	<!-- SqlSessionFactory를 가지고 SqlSession을 생성하는데, 그 일을
	  SqlSessionTemplate이 SqlSession 을 대신 하기 때문에 SqlSessionTemplate를 생성할때
	  생성자를 통해 SqlSessionFactory 를전달한다.--> 
	  
  <beans:bean id="sqlSession"
     class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	id="transactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
 
 <!-- transaction옵션과 pointcut 설정을 자바기반으로 설정 -->
 <tx:annotation-driven transaction-manager="transactionManager"/>
 	
</beans:beans>




















